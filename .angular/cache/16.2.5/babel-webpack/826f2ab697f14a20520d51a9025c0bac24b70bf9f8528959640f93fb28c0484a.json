{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { trigger } from '@angular/animations';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/student.service\";\nimport * as i3 from \"../services/toast.service\";\nimport * as i4 from \"@angular/common\";\nfunction AddStudentComponent_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtext(1, \" Name field is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddStudentComponent_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 18);\n    i0.ɵɵtext(1, \" Email field is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class AddStudentComponent {\n  constructor(fb, stdService, toastService) {\n    this.fb = fb;\n    this.stdService = stdService;\n    this.toastService = toastService;\n    this.studentForm = this.fb.group({\n      name: ['', [Validators.required]],\n      email: ['', [Validators.required]],\n      dob: ['', [Validators.required]],\n      gender: ['', [Validators.required]],\n      address: ['', [Validators.required]]\n    });\n  }\n  onSubmit() {\n    if (this.studentForm.valid) {\n      // Get the form values and send them to your API for storing the student data\n      const formData = this.studentForm.value;\n      this.stdService.store(formData).subscribe(response => {\n        console.log('Student data stored successfully:', response);\n        // Optionally, you can navigate to a different page or perform other actions after storing the data.\n      }, error => {\n        console.error('Error storing student data:', error);\n        // Handle the error here or display an error message to the user.\n      });\n    }\n  }\n\n  checkToast() {\n    this.toastService.showSuccess('This is a success toast message.');\n  }\n  static #_ = this.ɵfac = function AddStudentComponent_Factory(t) {\n    return new (t || AddStudentComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.StudentService), i0.ɵɵdirectiveInject(i3.ToastService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddStudentComponent,\n    selectors: [[\"app-add-student\"]],\n    decls: 33,\n    vars: 10,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"studentName\"], [\"type\", \"text\", \"formControlName\", \"name\", \"placeholder\", \"Enter your name\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"studentEmail\"], [\"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Enter your email\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"studentDOB\"], [\"type\", \"date\", \"formControlName\", \"dob\", 1, \"form-control\"], [\"for\", \"studentGender\"], [\"formControlName\", \"gender\", 1, \"form-control\"], [\"value\", \"Male\"], [\"value\", \"Female\"], [\"value\", \"Other\"], [\"for\", \"studentAddress\"], [\"formControlName\", \"address\", \"rows\", \"3\", \"placeholder\", \"Enter your address\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mt-3\", 3, \"disabled\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mt-3\", 3, \"click\"], [1, \"text-danger\"]],\n    template: function AddStudentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function AddStudentComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n        i0.ɵɵtext(3, \"Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 3);\n        i0.ɵɵtemplate(5, AddStudentComponent_span_5_Template, 2, 0, \"span\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 1)(7, \"label\", 5);\n        i0.ɵɵtext(8, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 6);\n        i0.ɵɵtemplate(10, AddStudentComponent_span_10_Template, 2, 0, \"span\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 1)(12, \"label\", 7);\n        i0.ɵɵtext(13, \"Date of Birth:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 1)(16, \"label\", 9);\n        i0.ɵɵtext(17, \"Gender:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"select\", 10)(19, \"option\", 11);\n        i0.ɵɵtext(20, \"Male\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"option\", 12);\n        i0.ɵɵtext(22, \"Female\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"option\", 13);\n        i0.ɵɵtext(24, \"Other\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(25, \"div\", 1)(26, \"label\", 14);\n        i0.ɵɵtext(27, \"Address:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"textarea\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"button\", 16);\n        i0.ɵɵtext(30, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"button\", 17);\n        i0.ɵɵlistener(\"click\", function AddStudentComponent_Template_button_click_31_listener() {\n          return ctx.checkToast();\n        });\n        i0.ɵɵtext(32, \"Submit\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        let tmp_3_0;\n        let tmp_4_0;\n        i0.ɵɵproperty(\"formGroup\", ctx.studentForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, ((tmp_1_0 = ctx.studentForm.get(\"name\")) == null ? null : tmp_1_0.hasError(\"required\")) && ((tmp_1_0 = ctx.studentForm.get(\"name\")) == null ? null : tmp_1_0.touched)));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.studentForm.get(\"name\")) == null ? null : tmp_2_0.hasError(\"required\")) && ((tmp_2_0 = ctx.studentForm.get(\"name\")) == null ? null : tmp_2_0.touched));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ((tmp_3_0 = ctx.studentForm.get(\"email\")) == null ? null : tmp_3_0.hasError(\"required\")) && ((tmp_3_0 = ctx.studentForm.get(\"email\")) == null ? null : tmp_3_0.touched)));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.studentForm.get(\"email\")) == null ? null : tmp_4_0.hasError(\"required\")) && ((tmp_4_0 = ctx.studentForm.get(\"email\")) == null ? null : tmp_4_0.touched));\n        i0.ɵɵadvance(19);\n        i0.ɵɵproperty(\"disabled\", ctx.studentForm.invalid);\n      }\n    },\n    dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"],\n    data: {\n      animation: [trigger('flyInOut', [transition('void => *', [animate('300ms ease-out', style({\n        transform: 'translateY(0)'\n      }))]), transition('* => void', [animate('300ms ease-in', style({\n        transform: 'translateY(100%)'\n      }))])])]\n    }\n  });\n}","map":{"version":3,"names":["Validators","trigger","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","AddStudentComponent","constructor","fb","stdService","toastService","studentForm","group","name","required","email","dob","gender","address","onSubmit","valid","formData","value","store","subscribe","response","console","log","error","checkToast","showSuccess","_","ɵɵdirectiveInject","i1","FormBuilder","i2","StudentService","i3","ToastService","_2","selectors","decls","vars","consts","template","AddStudentComponent_Template","rf","ctx","ɵɵlistener","AddStudentComponent_Template_form_ngSubmit_0_listener","ɵɵelement","ɵɵtemplate","AddStudentComponent_span_5_Template","AddStudentComponent_span_10_Template","AddStudentComponent_Template_button_click_31_listener","ɵɵproperty","ɵɵadvance","ɵɵpureFunction1","_c0","tmp_1_0","get","hasError","touched","tmp_2_0","tmp_3_0","tmp_4_0","invalid","transition","animate","style","transform"],"sources":["D:\\AngularWorkspace\\StudentManagement\\src\\app\\add-student\\add-student.component.ts","D:\\AngularWorkspace\\StudentManagement\\src\\app\\add-student\\add-student.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { StudentService } from '../services/student.service';\nimport { ToastService } from '../services/toast.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { trigger } from '@angular/animations';\n\n\n@Component({\n  selector: 'app-add-student',\n  templateUrl: './add-student.component.html',\n  styleUrls: ['./add-student.component.css'],\n  animations: [\n    trigger('flyInOut', [\n      transition('void => *', [\n        animate('300ms ease-out', style({ transform: 'translateY(0)' })),\n      ]),\n      transition('* => void', [\n        animate('300ms ease-in', style({ transform: 'translateY(100%)' })),\n      ]),\n    ]),\n  ],\n})\nexport class AddStudentComponent {\n  studentForm : FormGroup;\n\n  constructor( private fb : FormBuilder, private stdService : StudentService, private toastService : ToastService){\n    this.studentForm = this.fb.group({\n      name : ['',[Validators.required]],\n      email: ['',[Validators.required]],\n      dob : ['',[Validators.required]],\n      gender : ['',[Validators.required]],\n      address : ['',[Validators.required]]\n    })\n  }\n\n\n  onSubmit() {\n    if (this.studentForm.valid) {\n      // Get the form values and send them to your API for storing the student data\n      const formData = this.studentForm.value;\n      this.stdService.store(formData).subscribe(\n        (response) => {\n          console.log('Student data stored successfully:', response);\n          // Optionally, you can navigate to a different page or perform other actions after storing the data.\n        },\n        (error) => {\n          console.error('Error storing student data:', error);\n          // Handle the error here or display an error message to the user.\n        }\n      );\n    }\n  }\n  \n\n  checkToast(){\n      this.toastService.showSuccess('This is a success toast message.');\n  }\n\n\n}\n","<form [formGroup] = \"studentForm\" (ngSubmit) = \"onSubmit()\">\n    <!-- Student Name -->\n    <div class=\"form-group\">\n        <label for=\"studentName\">Name:</label>\n        <input type=\"text\" [ngClass]=\"{'is-invalid': studentForm.get('name')?.hasError('required') && studentForm.get('name')?.touched}\" class=\"form-control\"  formControlName=\"name\" placeholder=\"Enter your name\">\n        <span class=\"text-danger\" *ngIf=\"studentForm.get('name')?.hasError('required') && studentForm.get('name')?.touched\">\n            Name field is required.\n          </span>\n    </div>\n\n    <!-- Student Email -->\n    <div class=\"form-group\">\n        <label for=\"studentEmail\">Email:</label>\n        <input type=\"email\" [ngClass]=\"{'is-invalid': studentForm.get('email')?.hasError('required') && studentForm.get('email')?.touched}\" class=\"form-control\"  formControlName=\"email\" placeholder=\"Enter your email\">\n        <span class=\"text-danger\" *ngIf=\"studentForm.get('email')?.hasError('required') && studentForm.get('email')?.touched\">\n            Email field is required.\n          </span>\n    </div>\n\n    <!-- Student Date of Birth -->\n    <div class=\"form-group\">\n        <label for=\"studentDOB\">Date of Birth:</label>\n        <input type=\"date\" class=\"form-control\" formControlName = \"dob\">\n    </div>\n\n    <!-- Student Gender -->\n    <div class=\"form-group\">\n        <label for=\"studentGender\">Gender:</label>\n        <select class=\"form-control\" formControlName=\"gender\">\n            <option value=\"Male\">Male</option>\n            <option value=\"Female\">Female</option>\n            <option value=\"Other\">Other</option>\n        </select>\n    </div>\n\n    <!-- Student Address -->\n    <div class=\"form-group\">\n        <label for=\"studentAddress\">Address:</label>\n        <textarea class=\"form-control\" formControlName=\"address\"   rows=\"3\"\n            placeholder=\"Enter your address\"></textarea>\n    </div>\n\n    <!-- Submit Button -->\n    <button type=\"submit\" [disabled]=\"studentForm.invalid\" class=\"btn btn-primary mt-3\">Submit</button>\n\n    <button type=\"submit\" (click)=\"checkToast()\" class=\"btn btn-primary mt-3\">Submit</button>\n\n</form>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}