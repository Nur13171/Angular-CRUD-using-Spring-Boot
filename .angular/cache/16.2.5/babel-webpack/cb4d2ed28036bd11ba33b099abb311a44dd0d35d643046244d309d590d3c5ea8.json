{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class EditStudentComponent {\n  static #_ = this.ɵfac = function EditStudentComponent_Factory(t) {\n    return new (t || EditStudentComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditStudentComponent,\n    selectors: [[\"app-edit-student\"]],\n    decls: 29,\n    vars: 4,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"studentName\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\"], [\"for\", \"studentEmail\"], [\"type\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"for\", \"studentDOB\"], [\"type\", \"date\", \"formControlName\", \"dob\", 1, \"form-control\"], [\"for\", \"studentGender\"], [\"formControlName\", \"gender\", \"name\", \"gender\", 1, \"form-control\"], [3, \"ngValue\"], [\"for\", \"studentAddress\"], [\"formControlName\", \"address\", \"rows\", \"3\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mt-3\"]],\n    template: function EditStudentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function EditStudentComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n        i0.ɵɵtext(3, \"Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 1)(10, \"label\", 6);\n        i0.ɵɵtext(11, \"Date of Birth:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 1)(14, \"label\", 8);\n        i0.ɵɵtext(15, \"Gender:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"select\", 9)(17, \"option\", 10);\n        i0.ɵɵtext(18, \"Male\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"option\", 10);\n        i0.ɵɵtext(20, \"Female\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"option\", 10);\n        i0.ɵɵtext(22, \"Other\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(23, \"div\", 1)(24, \"label\", 11);\n        i0.ɵɵtext(25, \"Address:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"textarea\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"button\", 13);\n        i0.ɵɵtext(28, \"Submit\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.studentForm);\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"ngValue\", \"Male\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngValue\", \"Female\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngValue\", \"Others\");\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\n{}\nngOnInit();\n{\n  this.route.params.subscribe(params => {\n    studentId = +params['id'];\n    console.log('Student ID:', studentId);\n    // Initialize the form group here\n    this.studentForm = this.fb.group({\n      name: ['', Validators.required],\n      email: ['', Validators.required],\n      dob: [''],\n      gender: [''],\n      address: ['']\n    });\n    // Fetch student data and then patch the values\n    this.stdService.edit(studentId).subscribe(data => {\n      const date = new Date(data.dob);\n      const formattedDate = date.toISOString().split('T')[0]; // Extract the date portion\n      console.log(formattedDate);\n      console.log(\"student data: \", data);\n      this.studentForm.patchValue({\n        name: data.name,\n        email: data.email,\n        dob: formattedDate,\n        gender: data.gender,\n        address: data.address\n      });\n    });\n  });\n}\nonSubmit();\n{\n  if (this.studentForm.valid) {\n    // Get the form data\n    const formData = this.studentForm.value;\n    // Call your service to update the student data\n    this.stdService.update(studentId, formData).subscribe(response => {\n      console.log('Student updated successfully:', response);\n      // Optionally, you can navigate to a different page or handle the success accordingly\n    }, error => {\n      console.error('Error updating student:', error);\n      // Handle the error, such as showing an error message to the user\n    });\n  }\n}","map":{"version":3,"names":["Validators","EditStudentComponent","_","_2","selectors","decls","vars","consts","template","EditStudentComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵlistener","EditStudentComponent_Template_form_ngSubmit_0_listener","onSubmit","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty","studentForm","ɵɵadvance","ngOnInit","route","params","subscribe","studentId","console","log","fb","group","name","required","email","dob","gender","address","stdService","edit","data","date","Date","formattedDate","toISOString","split","patchValue","valid","formData","value","update","response","error"],"sources":["D:\\AngularWorkspace\\StudentManagement\\src\\app\\edit-student\\edit-student.component.ts","D:\\AngularWorkspace\\StudentManagement\\src\\app\\edit-student\\edit-student.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { StudentService } from '../services/student.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-edit-student',\n  templateUrl: './edit-student.component.html',\n  styleUrls: ['./edit-student.component.css']\n})\nexport class EditStudentComponent implements OnInit {\n  studentForm!: FormGroup;\n  studentId!: \n\n  constructor(private route: ActivatedRoute, private stdService: StudentService, private fb: FormBuilder) { }\n \n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n       studentId = +params['id'];\n      console.log('Student ID:', studentId);\n\n      // Initialize the form group here\n      this.studentForm = this.fb.group({\n        name: ['', Validators.required],\n        email: ['', Validators.required],\n        dob: [''],\n        gender: [''],\n        address: ['']\n      });\n\n\n    \n\n\n      // Fetch student data and then patch the values\n      this.stdService.edit(studentId).subscribe(data => {\n\n        const date = new Date(data.dob);\n        const formattedDate = date.toISOString().split('T')[0]; // Extract the date portion\n\n        console.log(formattedDate)\n\n        console.log(\"student data: \", data);\n        this.studentForm.patchValue({\n          name: data.name,\n          email: data.email,\n          dob: formattedDate,\n          gender: data.gender,\n          address: data.address\n        });\n      });\n    });\n  }\n\n  onSubmit() {\n    if (this.studentForm.valid) {\n      // Get the form data\n      const formData = this.studentForm.value;\n    \n  \n      // Call your service to update the student data\n      this.stdService.update(studentId, formData).subscribe(response => {\n        console.log('Student updated successfully:', response);\n  \n        // Optionally, you can navigate to a different page or handle the success accordingly\n      }, error => {\n        console.error('Error updating student:', error);\n        // Handle the error, such as showing an error message to the user\n      });\n    }\n  }\n}\n","<form [formGroup]=\"studentForm\" (ngSubmit)=\"onSubmit()\">\n    <!-- Student Name -->\n    <div class=\"form-group\">\n      <label for=\"studentName\">Name:</label>\n      <input type=\"text\" class=\"form-control\" formControlName=\"name\">\n    </div>\n  \n    <!-- Student Email -->\n    <div class=\"form-group\">\n      <label for=\"studentEmail\">Email:</label>\n      <input type=\"email\" class=\"form-control\" formControlName=\"email\">\n    </div>\n  \n    <!-- Student Date of Birth -->\n    <div class=\"form-group\">\n      <label for=\"studentDOB\">Date of Birth:</label>\n      <input type=\"date\" class=\"form-control\" formControlName=\"dob\">\n    </div>\n  \n    <!-- Student Gender -->\n    <div class=\"form-group\">\n      <label for=\"studentGender\">Gender:</label>\n      <select class=\"form-control\" formControlName=\"gender\" name=\"gender\" >\n        <option [ngValue]=\"'Male'\">Male</option>\n        <option [ngValue]=\"'Female'\">Female</option>\n        <option [ngValue]=\"'Others'\">Other</option>\n    </select>\n    </div>\n  \n    <!-- Student Address -->\n    <div class=\"form-group\">\n      <label for=\"studentAddress\">Address:</label>\n      <textarea class=\"form-control\" formControlName=\"address\" rows=\"3\"></textarea>\n    </div>\n  \n    <!-- Submit Button -->\n    <button type=\"submit\" class=\"btn btn-primary mt-3\">Submit</button>\n  </form>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}