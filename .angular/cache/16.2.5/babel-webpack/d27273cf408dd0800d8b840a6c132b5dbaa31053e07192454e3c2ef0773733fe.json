{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/student.service\";\nimport * as i3 from \"@angular/forms\";\nexport class EditStudentComponent {\n  constructor(route, stdService) {\n    this.route = route;\n    this.stdService = stdService;\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      const studentId = params['id'];\n      console.log('Student ID:', studentId);\n      // You can now use the studentId in your component as needed\n    });\n    // Call the edit method with the student's ID\n    this.stdService.edit(studentId).subscribe(data => {\n      console.log('Student data:', data);\n      // Use the data as needed in your component\n    });\n  }\n  static #_ = this.ɵfac = function EditStudentComponent_Factory(t) {\n    return new (t || EditStudentComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.StudentService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditStudentComponent,\n    selectors: [[\"app-edit-student\"]],\n    decls: 31,\n    vars: 0,\n    consts: [[1, \"form-group\"], [\"for\", \"studentName\"], [\"type\", \"text\", \"required\", \"\", \"placeholder\", \"Enter your name\", 1, \"form-control\"], [1, \"text-danger\"], [\"for\", \"studentEmail\"], [\"type\", \"email\", \"ngModel\", \"\", \"name\", \"studentEmail\", \"placeholder\", \"Enter your email\", 1, \"form-control\"], [\"for\", \"studentDOB\"], [\"type\", \"date\", \"ngModel\", \"\", \"name\", \"studentDOB\", 1, \"form-control\"], [\"for\", \"studentGender\"], [\"name\", \"studentGender\", \"ngModel\", \"\", 1, \"form-control\"], [\"value\", \"male\"], [\"value\", \"female\"], [\"value\", \"other\"], [\"for\", \"studentAddress\"], [\"ngModel\", \"\", \"name\", \"studentAddress\", \"rows\", \"3\", \"placeholder\", \"Enter your address\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mt-3\"]],\n    template: function EditStudentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\")(1, \"div\", 0)(2, \"label\", 1);\n        i0.ɵɵtext(3, \"Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵelementStart(5, \"span\", 3);\n        i0.ɵɵtext(6, \"name field is required.........\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 0)(8, \"label\", 4);\n        i0.ɵɵtext(9, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 0)(12, \"label\", 6);\n        i0.ɵɵtext(13, \"Date of Birth:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 0)(16, \"label\", 8);\n        i0.ɵɵtext(17, \"Gender:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"select\", 9)(19, \"option\", 10);\n        i0.ɵɵtext(20, \"Male\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"option\", 11);\n        i0.ɵɵtext(22, \"Female\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"option\", 12);\n        i0.ɵɵtext(24, \"Other\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(25, \"div\", 0)(26, \"label\", 13);\n        i0.ɵɵtext(27, \"Address:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"textarea\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"button\", 15);\n        i0.ɵɵtext(30, \"Submit\");\n        i0.ɵɵelementEnd()();\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EditStudentComponent","constructor","route","stdService","ngOnInit","params","subscribe","studentId","console","log","edit","data","_","i0","ɵɵdirectiveInject","i1","ActivatedRoute","i2","StudentService","_2","selectors","decls","vars","consts","template","EditStudentComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["D:\\AngularWorkspace\\StudentManagement\\src\\app\\edit-student\\edit-student.component.ts","D:\\AngularWorkspace\\StudentManagement\\src\\app\\edit-student\\edit-student.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { StudentService } from '../services/student.service';\n\n@Component({\n  selector: 'app-edit-student',\n  templateUrl: './edit-student.component.html',\n  styleUrls: ['./edit-student.component.css']\n})\nexport class EditStudentComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute, private stdService: StudentService) { }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      const studentId = params['id'];\n      console.log('Student ID:', studentId);\n      // You can now use the studentId in your component as needed\n    });\n\n\n    // Call the edit method with the student's ID\n    this.stdService.edit(studentId).subscribe(data => {\n      console.log('Student data:', data);\n      // Use the data as needed in your component\n    });\n\n  }\n  \n}\n","<form>\n    <!-- Student Name -->\n    <div class=\"form-group\">\n        <label for=\"studentName\">Name:</label>\n        <input type=\"text\" class=\"form-control\" required placeholder=\"Enter your name\">\n        <span class=\"text-danger\">name field is required.........</span>\n    </div>\n\n    <!-- Student Email -->\n    <div class=\"form-group\">\n        <label for=\"studentEmail\">Email:</label>\n        <input type=\"email\" class=\"form-control\" ngModel name=\"studentEmail\" placeholder=\"Enter your email\">\n    </div>\n\n    <!-- Student Date of Birth -->\n    <div class=\"form-group\">\n        <label for=\"studentDOB\">Date of Birth:</label>\n        <input type=\"date\" class=\"form-control\" ngModel name=\"studentDOB\">\n    </div>\n\n    <!-- Student Gender -->\n    <div class=\"form-group\">\n        <label for=\"studentGender\">Gender:</label>\n        <select class=\"form-control\" name=\"studentGender\" ngModel>\n            <option value=\"male\">Male</option>\n            <option value=\"female\">Female</option>\n            <option value=\"other\">Other</option>\n        </select>\n    </div>\n\n    <!-- Student Address -->\n    <div class=\"form-group\">\n        <label for=\"studentAddress\">Address:</label>\n        <textarea class=\"form-control\" ngModel name=\"studentAddress\" rows=\"3\"\n            placeholder=\"Enter your address\"></textarea>\n    </div>\n\n    <!-- Submit Button -->\n    <button type=\"submit\" class=\"btn btn-primary mt-3\">Submit</button>\n</form>"],"mappings":";;;;AASA,OAAM,MAAOA,oBAAoB;EAE/BC,YAAoBC,KAAqB,EAAUC,UAA0B;IAAzD,KAAAD,KAAK,GAALA,KAAK;IAA0B,KAAAC,UAAU,GAAVA,UAAU;EAAoB;EACjFC,QAAQA,CAAA;IACN,IAAI,CAACF,KAAK,CAACG,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;MACnC,MAAME,SAAS,GAAGF,MAAM,CAAC,IAAI,CAAC;MAC9BG,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEF,SAAS,CAAC;MACrC;IACF,CAAC,CAAC;IAGF;IACA,IAAI,CAACJ,UAAU,CAACO,IAAI,CAACH,SAAS,CAAC,CAACD,SAAS,CAACK,IAAI,IAAG;MAC/CH,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEE,IAAI,CAAC;MAClC;IACF,CAAC,CAAC;EAEJ;EAAC,QAAAC,CAAA,G;qBAjBUZ,oBAAoB,EAAAa,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAApBnB,oBAAoB;IAAAoB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCTjCb,EAAA,CAAAe,cAAA,WAAM;QAG2Bf,EAAA,CAAAgB,MAAA,YAAK;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QACtCjB,EAAA,CAAAkB,SAAA,eAA+E;QAC/ElB,EAAA,CAAAe,cAAA,cAA0B;QAAAf,EAAA,CAAAgB,MAAA,sCAA+B;QAAAhB,EAAA,CAAAiB,YAAA,EAAO;QAIpEjB,EAAA,CAAAe,cAAA,aAAwB;QACMf,EAAA,CAAAgB,MAAA,aAAM;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QACxCjB,EAAA,CAAAkB,SAAA,gBAAoG;QACxGlB,EAAA,CAAAiB,YAAA,EAAM;QAGNjB,EAAA,CAAAe,cAAA,cAAwB;QACIf,EAAA,CAAAgB,MAAA,sBAAc;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QAC9CjB,EAAA,CAAAkB,SAAA,gBAAkE;QACtElB,EAAA,CAAAiB,YAAA,EAAM;QAGNjB,EAAA,CAAAe,cAAA,cAAwB;QACOf,EAAA,CAAAgB,MAAA,eAAO;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QAC1CjB,EAAA,CAAAe,cAAA,iBAA0D;QACjCf,EAAA,CAAAgB,MAAA,YAAI;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;QAClCjB,EAAA,CAAAe,cAAA,kBAAuB;QAAAf,EAAA,CAAAgB,MAAA,cAAM;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;QACtCjB,EAAA,CAAAe,cAAA,kBAAsB;QAAAf,EAAA,CAAAgB,MAAA,aAAK;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;QAK5CjB,EAAA,CAAAe,cAAA,cAAwB;QACQf,EAAA,CAAAgB,MAAA,gBAAQ;QAAAhB,EAAA,CAAAiB,YAAA,EAAQ;QAC5CjB,EAAA,CAAAkB,SAAA,oBACgD;QACpDlB,EAAA,CAAAiB,YAAA,EAAM;QAGNjB,EAAA,CAAAe,cAAA,kBAAmD;QAAAf,EAAA,CAAAgB,MAAA,cAAM;QAAAhB,EAAA,CAAAiB,YAAA,EAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}