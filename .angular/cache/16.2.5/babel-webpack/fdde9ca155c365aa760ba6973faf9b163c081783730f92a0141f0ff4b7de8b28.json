{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nexport let AddStudentComponent = class AddStudentComponent {\n  constructor(fb, stdService, toastService, prive) {\n    this.fb = fb;\n    this.stdService = stdService;\n    this.toastService = toastService;\n    this.studentForm = this.fb.group({\n      name: ['', [Validators.required]],\n      email: ['', [Validators.required]],\n      dob: ['', [Validators.required]],\n      gender: ['', [Validators.required]],\n      address: ['', [Validators.required]]\n    });\n  }\n  onSubmit() {\n    if (this.studentForm.valid) {\n      // Get the form values and send them to your API for storing the student data\n      const formData = this.studentForm.value;\n      this.stdService.store(formData).subscribe(response => {\n        console.log('Student data stored successfully:', response);\n        this.toastService.showSuccess('Student data stored successfully');\n        // Navigate to the student list page\n        this.router.navigate(['student/list']);\n      }, error => {\n        console.error('Error storing student data:', error);\n        // Handle the error here or display an error message to the user.\n      });\n    }\n  }\n\n  checkToast() {\n    this.toastService.showSuccess('This is a success toast message.');\n  }\n  showAlert() {\n    Swal.fire({\n      title: 'Confirmation',\n      text: 'Do you want to proceed?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonText: 'Yes',\n      cancelButtonText: 'No'\n    }).then(result => {\n      if (result.isConfirmed) {\n        // User clicked \"Yes\" - perform the desired action here\n        Swal.fire('Success', 'You confirmed the action!', 'success');\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        // User clicked \"No\" or closed the dialog - handle accordingly\n        Swal.fire('Cancelled', 'You canceled the action.', 'error');\n      }\n    });\n  }\n};\nAddStudentComponent = __decorate([Component({\n  selector: 'app-add-student',\n  templateUrl: './add-student.component.html',\n  styleUrls: ['./add-student.component.css']\n})], AddStudentComponent);","map":{"version":3,"names":["Component","Validators","Swal","AddStudentComponent","constructor","fb","stdService","toastService","prive","studentForm","group","name","required","email","dob","gender","address","onSubmit","valid","formData","value","store","subscribe","response","console","log","showSuccess","router","navigate","error","checkToast","showAlert","fire","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","then","result","isConfirmed","dismiss","DismissReason","cancel","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\AngularWorkspace\\StudentManagement\\src\\app\\add-student\\add-student.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { StudentService } from '../services/student.service';\nimport { ToastService } from '../services/toast.service';\nimport { Router } from '@angular/router';\nimport Swal from 'sweetalert2';\n@Component({\n  selector: 'app-add-student',\n  templateUrl: './add-student.component.html',\n  styleUrls: ['./add-student.component.css'],\n \n})\nexport class AddStudentComponent {\n  studentForm : FormGroup;\n\n  constructor( \n    private fb : FormBuilder, \n    private stdService : StudentService, \n    private toastService : ToastService\n    prive\n    ){\n    this.studentForm = this.fb.group({\n      name : ['',[Validators.required]],\n      email: ['',[Validators.required]],\n      dob : ['',[Validators.required]],\n      gender : ['',[Validators.required]],\n      address : ['',[Validators.required]]\n    })\n  }\n\n\n  onSubmit() {\n    if (this.studentForm.valid) {\n      // Get the form values and send them to your API for storing the student data\n      const formData = this.studentForm.value;\n      this.stdService.store(formData).subscribe(\n        (response) => {\n          console.log('Student data stored successfully:', response);\n          this.toastService.showSuccess('Student data stored successfully');\n          // Navigate to the student list page\n          this.router.navigate(['student/list']);\n        },\n        (error) => {\n          console.error('Error storing student data:', error);\n          // Handle the error here or display an error message to the user.\n        }\n      );\n    }\n  }\n  \n\n  checkToast(){  \n      this.toastService.showSuccess('This is a success toast message.');\n  }\n\n  showAlert() {\n    Swal.fire({\n      title: 'Confirmation',\n      text: 'Do you want to proceed?',\n      icon: 'question',\n      showCancelButton: true,\n      confirmButtonText: 'Yes',\n      cancelButtonText: 'No',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        // User clicked \"Yes\" - perform the desired action here\n        Swal.fire('Success', 'You confirmed the action!', 'success');\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        // User clicked \"No\" or closed the dialog - handle accordingly\n        Swal.fire('Cancelled', 'You canceled the action.', 'error');\n      }\n    });\n  }\n  \n\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAsBC,UAAU,QAAmB,gBAAgB;AAInE,OAAOC,IAAI,MAAM,aAAa;AAOvB,WAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAG9BC,YACUC,EAAgB,EAChBC,UAA2B,EAC3BC,YAA2B,EACnCC,KAAK;IAHG,KAAAH,EAAE,GAAFA,EAAE;IACF,KAAAC,UAAU,GAAVA,UAAU;IACV,KAAAC,YAAY,GAAZA,YAAY;IAGpB,IAAI,CAACE,WAAW,GAAG,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;MAC/BC,IAAI,EAAG,CAAC,EAAE,EAAC,CAACV,UAAU,CAACW,QAAQ,CAAC,CAAC;MACjCC,KAAK,EAAE,CAAC,EAAE,EAAC,CAACZ,UAAU,CAACW,QAAQ,CAAC,CAAC;MACjCE,GAAG,EAAG,CAAC,EAAE,EAAC,CAACb,UAAU,CAACW,QAAQ,CAAC,CAAC;MAChCG,MAAM,EAAG,CAAC,EAAE,EAAC,CAACd,UAAU,CAACW,QAAQ,CAAC,CAAC;MACnCI,OAAO,EAAG,CAAC,EAAE,EAAC,CAACf,UAAU,CAACW,QAAQ,CAAC;KACpC,CAAC;EACJ;EAGAK,QAAQA,CAAA;IACN,IAAI,IAAI,CAACR,WAAW,CAACS,KAAK,EAAE;MAC1B;MACA,MAAMC,QAAQ,GAAG,IAAI,CAACV,WAAW,CAACW,KAAK;MACvC,IAAI,CAACd,UAAU,CAACe,KAAK,CAACF,QAAQ,CAAC,CAACG,SAAS,CACtCC,QAAQ,IAAI;QACXC,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEF,QAAQ,CAAC;QAC1D,IAAI,CAAChB,YAAY,CAACmB,WAAW,CAAC,kCAAkC,CAAC;QACjE;QACA,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;MACxC,CAAC,EACAC,KAAK,IAAI;QACRL,OAAO,CAACK,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACnD;MACF,CAAC,CACF;;EAEL;;EAGAC,UAAUA,CAAA;IACN,IAAI,CAACvB,YAAY,CAACmB,WAAW,CAAC,kCAAkC,CAAC;EACrE;EAEAK,SAASA,CAAA;IACP7B,IAAI,CAAC8B,IAAI,CAAC;MACRC,KAAK,EAAE,cAAc;MACrBC,IAAI,EAAE,yBAAyB;MAC/BC,IAAI,EAAE,UAAU;MAChBC,gBAAgB,EAAE,IAAI;MACtBC,iBAAiB,EAAE,KAAK;MACxBC,gBAAgB,EAAE;KACnB,CAAC,CAACC,IAAI,CAAEC,MAAM,IAAI;MACjB,IAAIA,MAAM,CAACC,WAAW,EAAE;QACtB;QACAvC,IAAI,CAAC8B,IAAI,CAAC,SAAS,EAAE,2BAA2B,EAAE,SAAS,CAAC;OAC7D,MAAM,IAAIQ,MAAM,CAACE,OAAO,KAAKxC,IAAI,CAACyC,aAAa,CAACC,MAAM,EAAE;QACvD;QACA1C,IAAI,CAAC8B,IAAI,CAAC,WAAW,EAAE,0BAA0B,EAAE,OAAO,CAAC;;IAE/D,CAAC,CAAC;EACJ;CAID;AAhEY7B,mBAAmB,GAAA0C,UAAA,EAN/B7C,SAAS,CAAC;EACT8C,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B;CAE1C,CAAC,C,EACW7C,mBAAmB,CAgE/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}