{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class StudentService {\n  constructor(_http) {\n    this._http = _http;\n    this.apiUrl = 'http://localhost:9001/api/student';\n  }\n  index() {\n    this.stdService.index().subscribe(response => {\n      this.students = response;\n      console.log(response);\n    }, error => {\n      console.error('Error fetching data:', error);\n    });\n  }\n  static #_ = this.ɵfac = function StudentService_Factory(t) {\n    return new (t || StudentService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StudentService,\n    factory: StudentService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["StudentService","constructor","_http","apiUrl","index","stdService","subscribe","response","students","console","log","error","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\AngularWorkspace\\StudentManagement\\src\\app\\services\\student.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\n\n  private apiUrl = 'http://localhost:9001/api/student'; \n\n  constructor(private _http: HttpClient) { \n\n  }\n\n\n  index() {\n    this.stdService.index().subscribe(\n      response => {\n        this.students = response;\n        console.log(response);\n      },\n      error => {\n        console.error('Error fetching data:', error);\n      }\n    );\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAIzBC,YAAoBC,KAAiB;IAAjB,KAAAA,KAAK,GAALA,KAAK;IAFjB,KAAAC,MAAM,GAAG,mCAAmC;EAIpD;EAGAC,KAAKA,CAAA;IACH,IAAI,CAACC,UAAU,CAACD,KAAK,EAAE,CAACE,SAAS,CAC/BC,QAAQ,IAAG;MACT,IAAI,CAACC,QAAQ,GAAGD,QAAQ;MACxBE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;IACvB,CAAC,EACDI,KAAK,IAAG;MACNF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CACF;EACH;EAAC,QAAAC,CAAA,G;qBAnBUZ,cAAc,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdjB,cAAc;IAAAkB,OAAA,EAAdlB,cAAc,CAAAmB,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}